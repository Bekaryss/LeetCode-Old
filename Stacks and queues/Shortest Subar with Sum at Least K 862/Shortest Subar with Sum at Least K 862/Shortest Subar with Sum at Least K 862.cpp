// Shortest Subar with Sum at Least K 862.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
#include <vector>
#include <queue>

using namespace std;

int shortestSubarray(vector<int>& A, int K) {
	int N = A.size(), res = N + 1;
	vector<int> B(N + 1);
	for (int i = 0; i < N; i++)
	{
		B[i + 1] = B[i] + A[i];
	}
	deque<int> d;
	for (int i = 0; i < N + 1; i++) {
		while (d.size() > 0 && B[i] - B[d.front()] >= K) {
			res = min(res, i - d.front());
			d.pop_front();
		}
		while (d.size() > 0 && B[i] <= B[d.back()]) {
			d.pop_back();
		}
		d.push_back(i);
	}
	return res <= N ? res : -1;
}

int main()
{
	vector<int> input = { 2,-1,2 };
    std::cout << "3 == " << shortestSubarray(input, 3) << endl; 


	input = { 17, 85, 93, -45, -21 };
	std::cout << "2 == " << shortestSubarray(input, 150) << endl;
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
